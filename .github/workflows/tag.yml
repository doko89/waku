name: Create Tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to tag (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  create-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Validate version format
        run: |
          if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Version must be in format X.Y.Z (e.g., 1.0.0)"
            exit 1
          fi

      - name: Check if tag exists
        run: |
          if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Error: Tag v${{ github.event.inputs.version }} already exists"
            exit 1
          fi

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push tag
        run: |
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
          git push origin "v${{ github.event.inputs.version }}"

      - name: Wait for tag to be available
        run: sleep 5

      - name: Trigger build workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}
          script: |
            console.log('Triggering build workflow for tag v${{ github.event.inputs.version }}');

            // Get the tag SHA
            const tag = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'tags/v${{ github.event.inputs.version }}'
            });

            console.log('Tag SHA:', tag.data.object.sha);

            // Trigger workflow_dispatch on build.yml
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'build.yml',
                ref: 'v${{ github.event.inputs.version }}',
                inputs: {
                  tag: 'v${{ github.event.inputs.version }}'
                }
              });
              console.log('Build workflow triggered successfully!');
            } catch (error) {
              console.log('Note: Build workflow will be triggered automatically by tag push');
              console.log('Error details:', error.message);
            }

